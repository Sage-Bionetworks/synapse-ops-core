---
name: File Archival Request

on:
  workflow_call:
    inputs:
      STACK:
        required: true
        type: string
        description: dev or prod
      STACK_ENDPOINT_SUFFIX:
        required: true
        type: string
        description: suffix of Synapse host
      TIMEOUT_MILLIS:
        required: false
        type: number
        description: The task timeout in milliseconds
        default: 90000
      FILE_COUNT_LIMIT:
        required: false
        type: number
        description: The maximum number of files to scan in a run
        default: 25000

env:
   RUNNER_LABEL: shared-runner
   PATH_TO_SCRIPT: scripts
   PATH_TO_SOURCE_CODE: src

jobs:
  # this is necessary to make env values available to later jobs
  get-env:
    runs-on: ubuntu-latest
    container:
      image: maven:3-amazoncorretto-11
    steps:
       - run: echo "null"
    outputs:
      RUNNER_LABEL: ${{ env.RUNNER_LABEL }}
      PATH_TO_SCRIPT: ${{ env.PATH_TO_SCRIPT }}
      PATH_TO_SOURCE_CODE: ${{ env.PATH_TO_SOURCE_CODE }}

  ensure-runner-exists:
    needs: get-env
    uses: "./.github/workflows/ensure_runner_exists.yml"
    with:
      LABEL: ${{ needs.get-env.outputs.RUNNER_LABEL }}
      CONTEXT: ${{ vars.CONTEXT }}
      ROLE_TO_ASSUME: ${{ vars.ROLE_TO_ASSUME }}
    secrets: inherit

  execute-script:
    runs-on: ${{ needs.get-env.outputs.RUNNER_LABEL }}
    needs: [ensure-runner-exists, get-env]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: Sage-Bionetworks/synapse-ops-core
          ref: main
          path: ${{ needs.get-env.outputs.PATH_TO_SCRIPT }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: Sage-Bionetworks/Synapse-Stack-Builder
          ref: develop
          path: ${{ needs.get-env.outputs.PATH_TO_SOURCE_CODE }}

      - name: Execute script
        run: >
          ${{ needs.get-env.outputs.PATH_TO_SCRIPT }}/scripts/file_archival_request.sh
          ${{ inputs.STACK }}
          ${{ inputs.STACK_ENDPOINT_SUFFIX }}
          ${{ inputs.TIMEOUT_MILLIS }}
          ${{ inputs.FILE_COUNT_LIMIT }}
          ${{ needs.get-env.outputs.PATH_TO_SOURCE_CODE }}
...
